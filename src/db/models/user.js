const mongoose = require("mongoose");

const Schema = mongoose.Schema;

const UserSchema = new Schema(
    {
        name: {
            type: String,
            required: true,
            max: 100,
            min: 1
        },
        email: {
            type: String,
            required: true,
            min: 3,
            index: { unique: true}
        },
        password: {
            type: String,
            required: true,
            min: 6
        },
        profile: { 
            adopterName: { type: String },
            adopterAdults: { type: String },
            adopterRel: { type: String },
            adopterAdd: { type: String },
            adopterCity: { type: String },
            adopterState: { type: String },
            adopterZip: { type: String },
            adopterPhone: { type: String },
            adopterEmail: { type: String },
            adopterJob: { type: String },
            adopterKids: { type: String },
            adopterAdultNum: { type: String },
            adopterKidInfo: { type: String },
            refName1: { type: String },
            refRel1: { type: String },
            refPhone1: { type: String },
            refName2: { type: String },
            refPhone2: { type: String },
            refRel2: { type: String },
            houseType: { type: String },
            houseTypeOther: { type: String },
            houseRentType: { type: String },
            fence: { type: String },
            fenceHeight: { type: String },
            pool: { type: String },
            poolFence: { type: String },
            landlordPerm: { type: String },
            landlordName: { type: String },
            landlordPhone: { type: String },
            petsNum: { type: String },
            pet1: { type: String },
            petType1: { type: String },
            petAge1: { type: String },
            petSex1: { type: String },
            petSpayed1: { type: String },
            petFrom1: { type: String },
            petTime1: { type: String },
            pet2: { type: String },
            petType2: { type: String },
            petAge2: { type: String },
            petSex2: { type: String },
            petSpayed2: { type: String },
            petFrom2: { type: String },
            petTime2: { type: String },
            pet3: { type: String },
            petType3: { type: String },
            petAge3: { type: String },
            petSex3: { type: String },
            petSpayed3: { type: String },
            petFrom3: { type: String },
            petTime3: { type: String },
            prevPetsNum: { type: String },
            prevpet1: { type: String },
            prevpetType1: { type: String },
            prevpetAge1: { type: String },
            prevpetSex1: { type: String },
            prevpetSpayed1: { type: String },
            prevpetFrom1: { type: String },
            prevpetTime1: { type: String },
            prevpetEnd1: { type: String },
            prevpet2: { type: String },
            prevpetType2: { type: String },
            prevpetAge2: { type: String },
            prevpetSex2: { type: String },
            prevpetSpayed2: { type: String },
            prevpetFrom2: { type: String },
            prevpetTime2: { type: String },
            prevpetEnd2: { type: String },
            prevpet3: { type: String },
            prevpetType3: { type: String },
            prevpetAge3: { type: String },
            prevpetSex3: { type: String },
            prevpetSpayed3: { type: String },
            prevpetFrom3: { type: String },
            prevpetTime3: { type: String },
            prevpetEnd3: { type: String },
            petCare: { type: String },
            petWhy: { type: String },
            petSleep: { type: String },
            outdoorInfo: { type: String },
            petStay: { type: String },
            petStayOther: { type: String },
            offlimits: { type: String },
            space: { type: String },
            spaceOther: { type: String },
            travel: { type: String },
            keep: { type: String },
            keepOther: { type: String },
            financial: { type: String },
            keepOption: { type: String },
            other: { type: String}
         },
    }
)

const User = mongoose.model('User', UserSchema);
module.exports = User;